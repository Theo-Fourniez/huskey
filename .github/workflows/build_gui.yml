name: Build and Release Huskey GUI ðŸš€

on:
  push:
    tags:
      - 'v*.*.*' # Matches version tags like v1.0.0, v1.1.0, etc.

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.Js environment
      uses: actions/setup-node@v4.0.2
      with:
        #node-version: 
        node-version-file: ./huskey-gui/.nvmrc 
        cache: 'npm'
        cache-dependency-path: huskey-gui/package-lock.json

    - name: Install Node.js dependencies
      run: cd huskey-gui && npm install
    
    - name: Install linux tauri build tools requirements
      if: ${{matrix.os == 'ubuntu-latest'}}
      uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: libwebkit2gtk-4.0-dev build-essential wget libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev
        version: 1.0
    
    - uses: Swatinem/rust-cache@v2

    - name: Build tauri project
      run: cd huskey-gui && npm run tauri build
    - name: Upload linux build artifacts
      if: ${{matrix.os == 'ubuntu-latest'}}
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts-linux
        path: |
            huskey-gui/src-tauri/target/release/bundle/appimage/*.AppImage 
            huskey-gui/src-tauri/target/release/bundle/deb/*.deb


  create_release:
    runs-on: ubuntu-latest
    permissions:
        contents: write
    needs: build

    steps:
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v4
    - name: Zip artifacts
      shell: pwsh
      run: |
          if ($env:RUNNER_OS -eq "Windows") {
            7z a build-artifacts-windows.zip build-artifacts-windows 
          }
          else {
            zip -r build-artifacts-linux.zip build-artifacts-linux
            rm -rf build-artifacts-linux
          }
    - uses: ncipollo/release-action@v1
      with:
        artifacts: "build-artifacts-linux.zip"
        body: "## Automated Huskey release !"